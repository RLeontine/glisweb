<?xml version="1.0" encoding="UTF-8"?>
<project name="DEPLOY" default="dist.interactive">
    
    <!-- inclusione file proprietà -->
    <property file="../../../usr/deploy/phing/build.properties" />

    <!-- proprietà derivate -->
    <property name="dst.dir" value="${dst.fld}/${dst.stg}" />
    <property name="src.dir" value="${src.fld}/${src.stg}" />

    <!-- proprietà generate -->
    <tstamp>
        <format property="bak.ext" pattern="%Y%m%d%H%M%S" locale="it,IT" />
    </tstamp>

    <!-- comandi -->
    <property name="cmd.bak" value="tar -cvzf /var/backups/${prj.nme}.${bak.ext}.tar.gz ${dst.dir}" />
    <property name="cmd.cps" value="cd ${dst.dir} &amp;&amp; composer update --quiet" />

    <!-- fileset del progetto -->
    <fileset dir="${src.stg}" id="files.project" expandsymboliclinks="true">

        <!-- file inclusi -->
        <include name="_**/*" />
        <include name="etc/**/*" />
        <include name="mod/**/*" />
        <include name="src/**/*" />
        <include name="usr/**/*" />
        <include name=".htaccess" />
        <include name="composer.json" />

        <!-- file esclusi -->
        <exclude name=".git/**/*" />
        <exclude name=".github/**/*" />
        <exclude name="robots.txt" />
        <exclude name="build.properties" />

    </fileset>

    <!-- git commit & push -->
    <target name="git.push">

        <!-- se c'è un repository di progetto -->
        <if>
            <available file="${src.dir}/.git/" />
            <then>

                <!-- se c'è un avanzamento di versione -->
                <if>
                    <equals arg1="${prj.inc}" arg2="" />
                    <then>

                        <!-- messaggi -->
                        <echo msg="nessun push richiesto in caso di deploy senza avanzamento di versione" />

                    </then>
                    <else>

                        <!-- se il repository non è quello di sviluppo principale -->
                        <if>
                            <equals arg1="${prj.git}" arg2="framework" />
                            <then>

                                <!-- messaggi -->
                                <echo msg="effettuare manualmente il push sul repository standard" />

                            </then>
                            <else>

                                <!-- passo al ramo master -->
                                <echo msg="git checkout..." />
                                <exec command="cd ${src.dir}/ &amp;&amp; git checkout master" />

                                <!-- effettuo il commit delle eventuali modifiche in sospeso -->
                                <echo msg="git commit..." />
                                <exec command="cd ${src.dir}/ &amp;&amp; git add . &amp;&amp; git commit -m 'distribuzione della versione ${version}'" />

                                <!-- applico il tag di versione -->
                                <echo msg="git tag..." />
                                <echo msg="tag: v${rev.num}" />
                                <exec command="cd ${src.dir}/ &amp;&amp; git tag -a 'v${rev.num}' -m 'versione ${rev.num}'" />

                                <!-- faccio il push pubblicando il tag -->
                                <echo msg="git push..." />
                                <exec command="cd ${src.dir}/ &amp;&amp; git push --follow-tags" />

                            </else>
                        </if>

                    </else>
                </if>
            </then>
            <else>

                <!-- messaggi -->
                <echo msg="nessun repository git presente per il progetto" />

            </else>
        </if>
    </target>

    <!-- backup per distribuzione locale -->
    <target name="backup.local">

        <!-- messaggi -->
        <echo msg="backup della destinazione..." />
        <echo msg="${cmd.bak}" />

        <!-- esecuzione del backup -->
        <exec command="${cmd.bak}" />

    </target>

    <!-- notifica via Slack -->
    <target name="notify.slack">

        <!-- messaggi -->
        <echo msg="invio la notifica via Slack..." />

        <!-- se Slack è collegato -->
        <if>
            <equals arg1="${slck.sa}" arg2="" />
            <then>

                <!-- messaggi -->
                <echo msg="Slack non configurato" />

            </then>
            <else>

                <!-- invio il messaggio-->
                <exec command="va.slack.msg.sh ${slack.sa} ${slack.sb} ${slack.sc} 'abbiamo rilasciato un aggiornamento in ${dst.stg} su ${dst.url}, vi preghiamo di prendere visione'" />

            </else>
        </if>
    
    </target>

    <!-- notifica via mail -->
    <target name="notify.email">

        <!-- messaggi -->
        <echo msg="invio la notifica via mail..." />

        <!-- se il destinatario è configurato -->
        <if>
            <equals arg1="${eml.adr}" arg2="" />
            <then>

                <!-- messaggi -->
                <echo msg="destinatario mail non configurato" />

            </then>
            <else>

                <!-- messaggi -->
                <echo msg="invio mail di notifica a ${eml.adr}" />

                <mail tolist="${eml.adr},produzione@istricesrl.it" subject="deploy in ${dst.stg}" from="produzione@istricesrl.it">
                    <![CDATA[
                    Gentile ${eml.nme},
                    siamo lieti di informarla che il suo progetto "${prj.nme}" è stato correttamente
                    aggiornato in ${dst.stg} a partire dalla versione di ${src.stg} da voi approvata
                    all'indirizzo ${src.url}.

                    La versione corrente del progetto è la ${rev.num}.

                    La licenza per questo deploy è ${prj.key};
                    questo codice vi dà diritto agli aggiornamenti automatici e al supporto in uso
                    e sviluppo relativo al framework GlisWeb.

                    Può vedere il progetto online all'indirizzo ${dst.url}

                    La preghiamo di esaminare attentamente le modifiche e di segnalarci qualsiasi
                    anomalia dovesse eventualmente riscontrare, che provvederemo senz'altro a
                    gestire con la massima tempestività.

                    L'occasione ci è gradita per porgerle i nostri più cordiali saluti,

                    Istrice srl
                    via F. De Giovanni 25
                    40129 Bologna BO
                    produzione@istricesrl.it
                    051.374789]]>
                </mail>

            </else>
        </if>

    </target>

    <!-- avanzamento di versione -->
    <target name="version.increment">

        <!-- se è dichiarato il tipo di deploy o no -->
        <if>
            <equals arg1="${prj.inc}" arg2="" />
            <then>

                <!-- messaggi -->
                <echo msg="deploy senza incremento di versione" />

            </then>
            <else>

                <!-- se non esiste il file di versione all'interno del progetto -->
                <if>
                    <not>
                        <available file="${src.dir}/etc/version.conf"/>
                    </not>
                    <then>

                        <!-- messaggi -->
                        <echo msg="creo e inizializzo il file: ${src.dir}/etc/version.conf" />

                        <!-- creo la cartella e il file di versione -->
                        <mkdir dir="${src.dir}/etc" />
                        <touch file="${src.dir}/etc/version.conf"/>
                        <echo msg="0.0.0" file="${src.dir}/etc/version.conf" />

                    </then>
                    <else>

                        <!-- messaggi -->
                        <echo msg="trovato file: ${src.dir}/etc/version.conf" />

                    </else>
                </if>

                <!-- incremento la versione in base al tipo di deploy -->
                <version releasetype="${prj.inc}" file="${src.dir}/etc/version.conf" property="rev.num"/>

            </else>
        </if>
    </target>

    <!-- distribuzione via rsync in locale -->
    <target name="dist.rsync.local" depends="backup.local">

        <!-- abilito la pagina 503 -->
        <mkdir dir="${dst.dir}/tmp" />
        <touch file="${dst.dir}/tmp/.upgrade" />

        <!-- sincronizzo le cartelle -->
        <echo msg="rsync ${src.dir} -> ${dst.dir}" />
        <filesync sourcedir="${src.dir}/" destinationdir="${dst.dir}/" exclude="tmp,var,usr,.git,.github,.gitignore,robots.txt,sitemap.xml,sitemap.csv,googlemerchant.xml,googlereviews.xml" delete="true" verbose="false" />

        <!-- aggiorno composer -->
        <echo msg="aggiorno composer in ${dst.dir}" />
        <exec command="${cmd.cps}" />

        <!-- disabilito la pagina 503 -->
        <delete file="${dst.dir}/tmp/.upgrade" />

    </target>

    <!-- distribuzione interattiva (chiede il tipo di release -->
    <target name="dist.interactive">

        <!-- messaggi -->
        <echo msg="ATTENZIONE! inserire il tipo di release (le etichette sono case sensitive)" />
        <echo msg="ATTENZIONE! se non si desidera aumentare la versione, lasciare il campo in bianco" />

        <!-- richiedo il tipo di deploy -->
        <propertyprompt propertyName="prj.inc" defaultValue="" promptText="tipo di distribuzione (Major|Minor|Bugfix)" />

        <!-- passo all'esecuzione del deploy -->
        <phingcall target="dist.exec" />

    </target>

    <!-- distribuzione major -->
    <target name="dist.major">

        <!-- forzo il tipo di avanzamento a Major -->
        <property name="prj.inc" value="Major" override="true" />

        <!-- messaggi -->
        <echo msg="impostato avanzamento: ${prj.inc}" />

        <!-- passo all'esecuzione del deploy -->
        <phingcall target="dist.exec" />

    </target>

    <!-- distribuzione minor -->
    <target name="dist.minor">

        <!-- forzo il tipo di avanzamento a Minor -->
        <property name="prj.inc" value="Minor" override="true" />

        <!-- messaggi -->
        <echo msg="impostato avanzamento: ${prj.inc}" />

        <!-- passo all'esecuzione del deploy -->
        <phingcall target="dist.exec" />

    </target>

    <!-- distribuzione bugfix -->
    <target name="dist.bugfix">

        <!-- forzo il tipo di avanzamento a Bugfix -->
        <property name="prj.inc" value="Bugfix" override="true" />

        <!-- messaggi -->
        <echo msg="impostato avanzamento: ${prj.inc}" />

        <!-- passo all'esecuzione del deploy -->
        <phingcall target="dist.exec" />

    </target>

    <!-- esecuzione del deploy -->
    <target name="dist.exec" depends="version.increment,git.push">

        <!-- messaggi -->
        <echo msg="progetto: ${prj.nme}" />
        <echo msg="distribuzione da ${src.stg} a ${dst.stg}..." />
        <echo msg="licenza: ${prj.key}" />
        <echo msg="tipo di release: ${prj.inc}" />
        <echo msg="versione: ${rev.num}" />

        <!-- se la destinazione è locale oppure remota -->
        <if>
            <equals arg1="${dst.hst}" arg2="" />
            <then>

                <!-- messaggi -->
                <echo msg="deploy locale su: ${dst.dir}" />

                <!-- esecuzione del deploy tramite rsync -->
                <phingcall target="dist.rsync.local" />

            </then>
            <else>

                <!-- messaggi -->
                <echo msg="deploy remoto su: ${dst.hst}${dst.dir}" />

            </else>
        </if>

        <!-- se è settato un URL del progetto di destinazione -->
        <if>
            <equals arg1="${dst.url}" arg2="" />
            <then>

                <!-- messaggi -->
                <echo msg="URL del progetto di destinazione non settato!" />

            </then>
            <else>

                <!-- notifica su Slack -->
                <phingcall target="notify.slack" />

                <!-- notifica via mail -->
                <phingcall target="notify.email" />

            </else>
        </if>

    </target>

</project>
